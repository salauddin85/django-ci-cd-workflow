name: Django CI/CD - Dev & Production

on:
  push:
    branches: [main]      # Only main triggers production deploy
  workflow_dispatch:      # Manual trigger for dev
  pull_request:
    branches: [main]

jobs:
  # ---------------------------
  # Job 1: Test (matrix build with coverage)
  # ---------------------------
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11, 3.12]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: python manage.py test

  # ---------------------------
  # Job 2: Deploy (only production)
  # ---------------------------
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy for main branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST https://api.render.com/deploy/srv-${{ env.RENDER_SERVICE_ID }} \
          -H "Authorization: Bearer $RENDER_API_KEY"

  # ---------------------------
  # Job 3: Dev Check (manual)
  # ---------------------------
  dev-check:
    if: github.event_name == 'workflow_dispatch'   # Only manual trigger
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11, 3.12]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        run: python manage.py test

      - name: Dev Environment OK Message
        run: echo "âœ… All tests passed. Development environment is good!"
