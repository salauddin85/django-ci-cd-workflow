name: Django CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ---------------------------
  # Job 1: Test (matrix build)
  # ---------------------------
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [ 3.11, 3.12]
    runs-on: ${{ matrix.os }}

    steps:
      # 1️ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️ Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 3️ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Install Linting Tools
        run: |
          pip install flake8 black isort pylint bandit

      - name: Run flake8
        run: flake8 .

      - name: Run black (check only)
        run: black --check .

      - name: Run isort (check only)
        run: isort --check-only .

      - name: Run pylint
        run: pylint **/*.py

      - name: Run bandit
        run: bandit -r .

      # 4️ Run Django tests
      - name: Run Django Tests
        run: python manage.py test

  # ---------------------------
  # Job 2: Deploy (only after tests pass on all matrix jobs)
  # ---------------------------
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # 1️ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️ Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # 3️ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4️ Deploy to Render
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST https://api.render.com/deploy/srv-${{ env.RENDER_SERVICE_ID }} \
          -H "Authorization: Bearer $RENDER_API_KEY"
